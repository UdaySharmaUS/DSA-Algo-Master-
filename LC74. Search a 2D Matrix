Brute Force Approach can be of O(n2). Where we have to iterate the whole matrix and have to search the element.

Optimized Approach (Binary Search) [O(nlogn)]
class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int row = matrix.size();
        int col = matrix[0].size();

        int start = 0;
        int end = row*col -1;
        
        int mid = start + (end - start)/2;

        while( start <= end){
        int element = matrix[mid/col][mid%col];
            if(target  == element){
                return true;
            }
            else if(target > element){
                start = mid + 1;
            }
            else{
                end = mid - 1;
            }
            mid = start + (end - start)/2;
        }
        return false;
    }
};
